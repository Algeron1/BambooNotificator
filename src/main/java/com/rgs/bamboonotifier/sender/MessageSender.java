package com.rgs.bamboonotifier.sender;

import com.rgs.bamboonotifier.DTO.DeployResult;
import com.rgs.bamboonotifier.service.PachkaService;
import com.rgs.bamboonotifier.service.TelegramService;
import org.springframework.beans.factory.annotation.Value;
import org.springframework.stereotype.Service;

@Service
public class MessageSender {

    private final TelegramService telegramService;
    private final PachkaService pachkaService;

    @Value("${notification.telegram.enabled}")
    private Boolean telegramEnabled;

    @Value("${notification.pachka.enabled}")
    private Boolean pachkaEnabled;

    public MessageSender(TelegramService telegramService, PachkaService pachkaService) {
        this.telegramService = telegramService;
        this.pachkaService = pachkaService;
    }


    public void sendMessage(DeployResult deployResult, String standName) {
        String message = formatMessage(deployResult, standName);
        if (telegramEnabled) {
            telegramService.sendMessage(message);
        }
        if (pachkaEnabled) {
            pachkaService.sendMessage(message);
        }
    }

    private String formatMessage(DeployResult requestDeployResult, String standName) {
        return String.format("""
                        <b>–ù–æ–≤—ã–π –¥–µ–ø–ª–æ–π –Ω–∞ —Å—Ç–µ–Ω–¥–µ %s</b>
                        
                        üì¶ –í–µ—Ä—Å–∏—è: %s
                        üïì –í—Ä–µ–º—è –Ω–∞—á–∞–ª–∞: %s
                        üïî –í—Ä–µ–º—è –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è: %s
                        üë®‚Äçüíª –ê–≤—Ç–æ—Ä: %s
                        üåø –ë—Ä–∞–Ω—á: %s
                        üìä –ö–æ–Ω–µ—á–Ω—ã–π —Å—Ç–∞—Ç—É—Å: %s
                        üìä –°—Ç–∞—Ç—É—Å –¥–µ–ø–ª–æ—è: %s
                        """
                ,
                standName,
                requestDeployResult.getDeploymentVersion().getName(),
                requestDeployResult.getStartedDate().getTime(),
                requestDeployResult.getFinishedDate().getTime(),
                requestDeployResult.getDeploymentVersion().getCreatorDisplayName(),
                requestDeployResult.getDeploymentVersion().getPlanBranchName(),
                requestDeployResult.getDeploymentState(),
                requestDeployResult.getLifeCycleState()
        );
    }
}
